name: CI & Release

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: Build and test

    runs-on: ${{ matrix.os }}

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      DUNE_RELEASE_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      TERM: dumb
      OPAMYES: 1

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          # - windows-latest
        ocaml-compiler:
          - 4.14
          - 5.1.1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ startsWith(github.ref, 'refs/tags/') && '0' || '1' }}

      - name: Load opam cache when not Windows
        if: runner.os != 'Windows'
        id: opam-cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}

      - name: Load opam cache when Windows
        if: runner.os == 'Windows'
        id: opam-cache-windows
        uses: actions/cache/restore@v3
        with:
          path: _opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install
        run: make install

      - name: Build
        run: make build

      - name: Check formatting
        run: make format-check

      - name: Run tests
        run: make test

      - name: Run benchmarks
        run: make bench

      - name: Generate docs
        if: github.ref == 'refs/heads/main'
        run: make docs

      - name: Publish docs
        uses: crazy-max/ghaction-github-pages@v1
        if: github.ref == 'refs/heads/main'
        with:
          target_branch: gh-pages
          build_dir: _build/default/_doc/_html/
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Save cache when not Windows
        uses: actions/cache/save@v3
        if: steps.opam-cache.outputs.cache-hit != 'true' && runner.os != 'Windows'
        with:
          path: ~/.opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}

      - name: Save cache when Windows
        uses: actions/cache/save@v3
        if: steps.opam-cache-windows.outputs.cache-hit != 'true' && runner.os == 'Windows'
        with:
          path: _opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}

      # Release steps - only run on ubuntu-latest with OCaml 5.1.1 when a tag is pushed
      - name: Install release tools
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        run: opam install -y dune-release

      - name: Configure Git for release
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Lint opam files
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        run: opam exec -- dune-release lint

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Distribute release archive
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        run: |
          opam exec -- dune-release distrib --skip-tests --skip-lint

      - name: Publish to GitHub
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        env:
          DUNE_RELEASE_DELEGATE: github-dune-release
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          opam exec -- dune-release publish --yes --change-log=./CHANGES.md

      - name: Package opam release
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        run: |
          opam exec -- dune-release opam pkg -p html_of_jsx --yes --change-log=./CHANGES.md

      - name: Setup dune-release configuration
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        run: |
          mkdir -p ~/.config/dune/
          cat > ~/.config/dune/release.yml << EOF
          user: davesnx
          remote: git@github.com:davesnx/opam-repository
          local: /home/runner/git/opam-repository
          EOF

      - name: Submit to opam repository
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.ocaml-compiler == '5.1.1'
        env:
          DUNE_RELEASE_DELEGATE: github-dune-release
        run: |
          # Submit to opam-repository
          opam exec -- dune-release opam submit --yes --change-log=./CHANGES.md
