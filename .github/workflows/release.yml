name: Release

on:
  push:
    tags:
    - '*'
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  relase:
    name: Release

    runs-on: ${{ matrix.os }}

    env:
      TERM: dumb
      OPAMYES: 1

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 5.3.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '1'

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3.4.5
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install
        run: make install

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        shell: bash
        working-directory: .github/scripts/release
        run: npm ci

      - name: Build
        shell: bash
        working-directory: .github/scripts/release
        run: npm run package

      - name: Run dune-release
        uses: ./.github/scripts/release
        with:
          package-name: 'html_of_jsx'
          changelog: './CHANGES.md'
          github-token: ${{ secrets.GH_TOKEN }}
          dry-run: ${{ github.event_name == 'pull_request' }} # Dry-run on PRs, real release on tags
