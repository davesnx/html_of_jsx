name: Release

on:
  push:
    tags:
    - '*'
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  relase:
    name: Release

    runs-on: ${{ matrix.os }}

    env:
      TERM: dumb
      OPAMYES: 1

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 5.3.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '1'

      - name: Load opam cache
        id: opam-cache-windows
        uses: actions/cache/restore@v3
        with:
          path: _opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3.4.5
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install
        run: make install

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        shell: bash
        working-directory: .github/scripts/release
        run: npm ci

      - name: Build
        shell: bash
        working-directory: .github/scripts/release
        run: npm run package

      - name: Create temporary test tag for PR
        if: github.event_name == 'pull_request'
        run: |
          TAG="0.0.6"
          echo "Creating test tag: $TAG"
          git tag $TAG
          echo "TEST_TAG=$TAG" >> $GITHUB_ENV

      - name: Run dune-release
        uses: ./.github/scripts/release
        with:
          package-name: 'html_of_jsx'
          changelog: './CHANGES.md'
          github-token: ${{ secrets.GH_TOKEN }}
          dry-run: false # Testing without dry-run

      - name: Clean up beta tag
        if: always() && github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if [ -n "$TEST_TAG" ]; then
            echo "Cleaning up test tag: $TEST_TAG"

            # Delete remote tag if it exists
            git push origin :refs/tags/$TEST_TAG 2>/dev/null || echo "Remote tag doesn't exist"

            # Delete local tag if it exists
            git tag -d $TEST_TAG 2>/dev/null || echo "Local tag doesn't exist"

            # Delete GitHub release if it exists
            gh release delete $TEST_TAG --yes --cleanup-tag 2>/dev/null || echo "Release doesn't exist"

            echo "Cleanup complete"
          fi

      - name: Save cache
        uses: actions/cache/save@v3
        with:
          path: ~/.opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}
