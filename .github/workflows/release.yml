name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - '*'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    # Only run if CI succeeded on a tag push (or PR for testing)
    if: |
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.event == 'push') ||
      github.event_name == 'pull_request'

    runs-on: ${{ matrix.os }}

    env:
      TERM: dumb
      OPAMYES: 1

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 5.3.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}
          fetch-depth: '0'

      - name: Load opam cache
        id: opam-cache-windows
        uses: actions/cache/restore@v3
        with:
          path: _opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3.4.5
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install
        run: make install

      - name: Install dune-release
        run: opam install dune-release -y

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        shell: bash
        working-directory: .github/scripts/release
        run: npm ci

      - name: Build
        shell: bash
        working-directory: .github/scripts/release
        run: npm run package

      - name: Run dune-release
        uses: ./.github/scripts/release
        with:
          package-name: 'html_of_jsx'
          changelog: './CHANGES.md'
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Save cache
        uses: actions/cache/save@v3
        with:
          path: ~/.opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-compiler }}-${{ hashFiles('**.opam') }}
