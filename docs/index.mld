{0 html_of_jsx}

Render HTML with JSX

{b html_of_jsx} is a JSX transformation to write HTML declaratively in {{:https://ocaml.org}OCaml}, {{:https://reasonml.github.io}Reason} and {{:https://github.com/ocaml-mlx/mlx}mlx}.

This library was extracted from {{: https://github.com/ml-in-barcelona/server-reason-react} server-reason-react} and simplified to work with HTML and SVG.

{1 Installation}

{@bash[
opam install html_of_jsx
]}

add it to your {b dune} file

{[
(libraries html_of_jsx)
(preprocess (pps html_of_jsx.ppx))
]}

{1 API}

The only module exposed is {!JSX} with some functions to construct elements and {!JSX.render} to transform those elements into a string.

{b Visit the {!page-"features"} page for all API reference}

{1 Overview}

- Works with {{:https://ocaml.org} OCaml}, {{:https://reasonml.github.io} Reason} and {{:https://github.com/ocaml-mlx/mlx}mlx}
- Brings the "component model" to HTML
- Supports all of the Reason's JSX features (uppercase components, fragments, optional attributes, punning)
- but with a few improvements (lowercase components, no need to add the ppx annotation)
- Integrates well with Htmx and others (see the {!page-"htmx"} page)
- No React idioms (no [className], no [htmlFor], no [onChange], etc...), just plain HTML5
- Type-safe, validates attributes and their types
- Minimal
  - [JSX.render] to render a JSX element to a HTML string
  - [JSX.*] to construct DOM Elements and DOM nodes ([JSX.string], [JSX.int], [JSX.null], [JSX.list] and [JSX.unsafe])
- Designed to work on the server, but can be used on the client-side (with {{:https://melange.re} Melange} or {{:https://ocsigen.org/js_of_ocaml/} jsoo})
